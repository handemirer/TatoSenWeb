@{
    ViewData["Title"] = "Learn";
}
@using EntityLayer.Model
@using DataAccessLayer.Data
@model UserSentence
@{
    Context context = new Context();
    Sentence sentence = context.Sentences.Where(x => x.sentence_id == @Model.sentence_id).FirstOrDefault();
    string country_code = context.Users.FirstOrDefault(x => @Model.user_id == x.user_id).country_code;
}

<div class="container-fluid ">
    <div class="row">
        <div class="col-md-3">
        </div>
        <div class="col-md-6 ">

            <div class="container">
                <div class="row">
                    <!-- Card 1 -->
                    <input type="checkbox" id="card-1" />
                    <label class="col-md-12 card-container" style="min-height:256px" for="card-1">
                        <div class="card-flip ">
                            <!-- Card 1 Front -->
                            <div class="card front align-items-center d-flex justify-content-center">
                                <span class="fa fa-4x fa-smile-o text-center"></span>
                                <div class="card-block">
                                    @Model.sentence_id
                                </div>
                            </div>
                            <!-- End Card 1 Front -->
                            <!-- Card 1 Back -->
                            <div class="card back align-items-center d-flex justify-content-center">
                                <div class="card-block">
                                    @sentence.text
                                </div>
                            </div>
                            <!-- End Card 1 Back -->
                        </div>
                    </label>
                    <!-- End Card 1 -->


                </div>

            </div>

            <div class="row  m-2 ">
                <div class="col-4  d-flex justify-content-center">

                    <button type="button" class="btn btn-danger " onclick="location.href='@Url.Action("ChangeUserPack", "Home",new{id=@Model.user_pack_id,user_sentence_id=@Model.user_sentence_id,pack_id=1})'">
                        DontKnow
                    </button>
                </div>
                <div class="col-4  d-flex justify-content-center ">

                    <button type="button" class="btn btn-warning " onclick="location.href='@Url.Action("ChangeUserPack", "Home",new{id=@Model.user_pack_id,user_sentence_id=@Model.user_sentence_id,pack_id=2})'">
                        Confused
                    </button>
                </div>
                <div class="col-4  d-flex justify-content-center">
                    <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("ChangeUserPack", "Home",new{id=@Model.user_pack_id,user_sentence_id=@Model.user_sentence_id,pack_id=3})'">
                        Learned
                    </button>
                </div>
            </div>
            <div class="row  m-2">
                <div class="col-4 d-flex justify-content-center">

                    <a target="_blank" type="button" class="btn btn-outline-info " href="http://translate.google.com/#auto/@country_code/@sentence.text">
                        Translate
                    </a>
                </div>
                <div class="col-4 d-flex justify-content-center">

                    <button type="button" class="btn btn-outline-danger " onclick="location.href='@Url.Action("DeleteUserSentence", "Home",new{id=@Model.user_pack_id,user_sentence_id=@Model.user_sentence_id})'">
                        Delete
                    </button>
                </div>
                <div class="col-4 d-flex justify-content-center">


                    <audio id="audio" src="https://handemirer.github.io/tatosen-mp3/@{@Model.sentence_id}.mp3"></audio>
                    <button type="button" class="btn btn-outline-primary " onclick="play()">
                        Listen
                    </button>
                </div>
            </div>
            <div class="row  m-2">
                <div class="col-6 d-flex justify-content-center">

                    <button type="button" class="btn btn-outline-dark" onclick="location.href='@Url.Action("UpdateIndex", "Home",new{id=@Model.user_pack_id,user_pack_id=@Model.user_pack_id,indexDiff=-1})'">
                        Previous
                    </button>


                </div>
                <div class="col-6 d-flex justify-content-center">

                    <button type="button" class="btn btn-outline-dark" onclick="location.href='@Url.Action("UpdateIndex", "Home",new{id=@Model.user_pack_id,user_pack_id=@Model.user_pack_id,indexDiff=1})'">
                        Next
                    </button>
                </div>
            </div>
        </div>
        <div class="col-md-3">
        </div>
    </div>
</div>



























@*{<div class="play-pause-btn" onclick="play()">
        <div class="row">
            <p class="mr-3">Play Audio </p>
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="24" viewBox="0 0 18 24">
                <path fill="#566574" fill-rule="evenodd" d="M18 12L0 24V0" />
            </svg>
        </div>
    </div>
    <br />
        sensentence_id =
    @Model.sentence_id

            Context context= new Context();
            }<br />
        <button onclick="flip()">flip the card</button>
        <section class="flipable-container">
            <div class="flipable-card" onclick="flip()">
                <div class="front">1</div>
                <div class="back">2</div>
            </div>
        </section>
*@



<style>



    input[type='checkbox'] {
        display: none;
    }

    /* Flip Cards CSS */
    .card-container {
        display: grid;
        perspective: 700px;
    }

    .card-flip {
        display: grid;
        grid-template: 1fr / 1fr;
        grid-template-areas: "frontAndBack";
        transform-style: preserve-3d;
        transition: all 0.7s ease;
    }

        .card-flip div {
            backface-visibility: hidden;
            transform-style: preserve-3d;
        }

    .front {
        grid-area: frontAndBack;
    }

    .back {
        grid-area: frontAndBack;
        transform: rotateY(-180deg);
    }

    input[type='checkbox']:checked + .card-container .card-flip {
        transform: rotateY(180deg);
    }
</style>

<script type="text/javascript">


    function play() {
        var audio = document.getElementById('audio');
        audio.play();
    }

</script>
